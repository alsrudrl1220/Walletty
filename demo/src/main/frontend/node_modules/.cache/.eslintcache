[{"C:\\demo\\src\\main\\frontend\\src\\index.js":"1","C:\\demo\\src\\main\\frontend\\src\\App.js":"2","C:\\demo\\src\\main\\frontend\\src\\pages\\Survey_goalmoney.js":"3","C:\\demo\\src\\main\\frontend\\src\\pages\\Login.js":"4","C:\\demo\\src\\main\\frontend\\src\\pages\\Home.js":"5","C:\\demo\\src\\main\\frontend\\src\\context\\UserContext.js":"6","C:\\demo\\src\\main\\frontend\\src\\pages\\Join.js":"7","C:\\demo\\src\\main\\frontend\\src\\pages\\Survey.js":"8","C:\\demo\\src\\main\\frontend\\src\\components\\Button.js":"9","C:\\capstone\\demo\\src\\main\\frontend\\src\\index.js":"10","C:\\capstone\\demo\\src\\main\\frontend\\src\\App.js":"11","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Survey.js":"12","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Login.js":"13","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Survey_goalmoney.js":"14","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Home.js":"15","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Join.js":"16","C:\\capstone\\demo\\src\\main\\frontend\\src\\context\\UserContext.js":"17","C:\\capstone\\demo\\src\\main\\frontend\\src\\components\\Button.js":"18"},{"size":467,"mtime":1695474560044,"results":"19","hashOfConfig":"20"},{"size":902,"mtime":1696255491249,"results":"21","hashOfConfig":"20"},{"size":1173,"mtime":1696155198080,"results":"22","hashOfConfig":"20"},{"size":2699,"mtime":1696236397357,"results":"23","hashOfConfig":"20"},{"size":206,"mtime":1696100505616,"results":"24","hashOfConfig":"20"},{"size":1081,"mtime":1695829264629,"results":"25","hashOfConfig":"20"},{"size":4494,"mtime":1696255691172,"results":"26","hashOfConfig":"20"},{"size":5459,"mtime":1696156146578,"results":"27","hashOfConfig":"20"},{"size":227,"mtime":1696018646834,"results":"28","hashOfConfig":"20"},{"size":482,"mtime":1696400455380,"results":"29","hashOfConfig":"30"},{"size":932,"mtime":1696400455376,"results":"31","hashOfConfig":"30"},{"size":5457,"mtime":1696515237327,"results":"32","hashOfConfig":"30"},{"size":2716,"mtime":1696418847064,"results":"33","hashOfConfig":"30"},{"size":2595,"mtime":1696543683007,"results":"34","hashOfConfig":"30"},{"size":206,"mtime":1696400455381,"results":"35","hashOfConfig":"30"},{"size":4435,"mtime":1696516015694,"results":"36","hashOfConfig":"30"},{"size":1081,"mtime":1696400455378,"results":"37","hashOfConfig":"30"},{"size":227,"mtime":1696545032868,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o9ict7",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"18o8pao",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\demo\\src\\main\\frontend\\src\\index.js",[],[],"C:\\demo\\src\\main\\frontend\\src\\App.js",["100","101"],[],"C:\\demo\\src\\main\\frontend\\src\\pages\\Survey_goalmoney.js",["102","103"],[],"C:\\demo\\src\\main\\frontend\\src\\pages\\Login.js",[],[],"C:\\demo\\src\\main\\frontend\\src\\pages\\Home.js",["104"],[],"C:\\demo\\src\\main\\frontend\\src\\context\\UserContext.js",[],[],"C:\\demo\\src\\main\\frontend\\src\\pages\\Join.js",["105"],[],"C:\\demo\\src\\main\\frontend\\src\\pages\\Survey.js",["106","107","108"],[],"C:\\demo\\src\\main\\frontend\\src\\components\\Button.js",[],[],"C:\\capstone\\demo\\src\\main\\frontend\\src\\index.js",[],[],["109"],"C:\\capstone\\demo\\src\\main\\frontend\\src\\App.js",["110","111"],[],"import \"./App.css\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { createContext, React } from \"react\";\r\n\r\nimport Login from \"./pages/Login\";\r\nimport Home from \"./pages/Home\";\r\nimport Join from \"./pages/Join\";\r\nimport Survey from \"./pages/Survey\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport Survey_goalmoney from \"./pages/Survey_goalmoney\";\r\n\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path=\"/join\" element={<Join />} />\r\n            <Route path=\"/survey\" element={<Survey />} />\r\n            <Route path=\"/survey-goalmoney\" element={<Survey_goalmoney />} />\r\n          </Routes>\r\n        </div>\r\n      </BrowserRouter>\r\n    </UserProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Survey.js",["112","113","114"],[],"import { useState } from \"react\";\r\nimport { useUserState } from \"../context/UserContext\";\r\nimport Button from \"../components/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst consumeList = [\r\n  { value: \"eat_out\", name: \"외식\" },\r\n  { value: \"delivery\", name: \"배달\" },\r\n  { value: \"cafe\", name: \"카페\" },\r\n  { value: \"snack\", name: \"간식\" },\r\n  { value: \"taxi\", name: \"택시\" },\r\n  { value: \"shopping\", name: \"쇼핑\" },\r\n  { value: \"beauty\", name: \"미용\" },\r\n];\r\n\r\nconst Survey = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useUserState();\r\n  const [fixedCheckedList, setFixedCheckedList] = useState([]);\r\n  const [goalCheckedList, setGoalCheckedList] = useState([]);\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [goalRight, setGoalRight] = useState(false);\r\n  const storageFixedList = JSON.parse(localStorage.getItem(\"fixed_entry\"));\r\n  const storageGoalList = JSON.parse(localStorage.getItem(\"goal_entry\"));\r\n\r\n  const fixedCheckedItemHandler = (value, isChecked) => {\r\n    if (isChecked) {\r\n      setFixedCheckedList((prev) => [...prev, value]);\r\n      return;\r\n    } else if (!isChecked) {\r\n      setFixedCheckedList(fixedCheckedList.filter((item) => item !== value));\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  const goalCheckedItemHandler = (value, isChecked) => {\r\n    if (isChecked) {\r\n      setGoalCheckedList((prev) => [...prev, value]);\r\n      return;\r\n    } else if (!isChecked && goalCheckedList.includes(value)) {\r\n      setGoalCheckedList(goalCheckedList.filter((item) => item !== value));\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  const fixedCheckHandler = (e, value) => {\r\n    setIsChecked(!isChecked);\r\n    fixedCheckedItemHandler(value, e.target.checked);\r\n  };\r\n\r\n  const goalCheckHandler = (e, value) => {\r\n    setIsChecked(!isChecked);\r\n    goalCheckedItemHandler(value, e.target.checked);\r\n  };\r\n\r\n  const allSubmitHandler = (e) => {\r\n    if (fixedCheckedList.length > 2) {\r\n      alert(\"고정 지출은 최대 두 개 선택 가능합니다\");\r\n    } else if (goalCheckedList.length !== 3) {\r\n      alert(\"절약하고 싶은 항목은 반드시 세 개 선택해야 합니다.\");\r\n    } else if (\r\n      goalCheckedList.filter((it) => fixedCheckedList.includes(it)).length !== 0\r\n    ) {\r\n      console.log(\r\n        goalCheckedList.filter((it) => fixedCheckedList.includes(it))\r\n      );\r\n      alert(\r\n        \"두 질문은 중복되는 항목을 가질 수 없습니다. 각자 다른 항목을 선택해 주세요\"\r\n      );\r\n    } else {\r\n      setGoalRight(!goalRight);\r\n      localStorage.setItem(\"fixed_entry\", JSON.stringify(fixedCheckedList));\r\n      localStorage.setItem(\"goal_entry\", JSON.stringify(goalCheckedList));\r\n      navigate(\"/survey-goalmoney\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>가입해주셔서 감사합니다!</h2>\r\n      <h4>\r\n        사용자님의 소비 습관을 파악하기 위한 설문을 제출하면 서비스가\r\n        시작됩니다.\r\n      </h4>\r\n      <div className=\"survey_qs\">\r\n        <div className=\"survey_q_box\">\r\n          <div className=\"survey_q_text\">\r\n            소비하는 항목 중 줄이기 힘든 고정지출에는 어떤 것이 있나요? (최대\r\n            2개 선택)\r\n          </div>\r\n          <div className=\"checkbox_list_box\">\r\n            {consumeList.map((item) => (\r\n              <div className=\"checkbox_items\" key={`fixed_${item.value}`}>\r\n                <input\r\n                  className={`${\r\n                    fixedCheckedList.includes(item)\r\n                      ? \"checkbox_item_checked\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"checkbox\"\r\n                  id={`fixed_${item.value}`}\r\n                  checked={fixedCheckedList.includes(item)}\r\n                  onChange={(e) => fixedCheckHandler(e, item)}\r\n                />\r\n\r\n                <label htmlFor={`fixed_${item.value}`}>{item.name}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"survey_q_box\">\r\n          <div className=\"survey_q_text\">\r\n            가장 절약하고 싶은 항목 세 가지를 선택해 주세요.\r\n          </div>\r\n          <div className=\"checkbox_list_box\">\r\n            {consumeList.map((item) => (\r\n              <div className=\"checkbox_items\" key={`goal_${item.value}`}>\r\n                <input\r\n                  className={`${\r\n                    goalCheckedList.includes(item)\r\n                      ? \"checkbox_item_checked\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"checkbox\"\r\n                  id={`goal_${item.value}`}\r\n                  checked={goalCheckedList.includes(item)}\r\n                  onChange={(e) => goalCheckHandler(e, item)}\r\n                />\r\n                <label htmlFor={`goal_${item.value}`}>{item.name}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <Button text={\"선택 완료\"} onClick={allSubmitHandler} type={\"survey\"} />\r\n        {/* {goalRight && (\r\n          <div className=\"survey_q_box\">\r\n            <div className=\"survey_q_text\">\r\n              각 항목별로 줄이고 싶은 목표 금액을 입력해 주세요. 목표 금액은\r\n              현재 해당 항목 지출량의 5% 이상이어야 합니다.\r\n            </div>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Survey;","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Login.js",["115"],[],"import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUserDispatch } from \"../context/UserContext\";\r\nimport Button from \"../components/Button\";\r\n\r\nconst URL = \"http://localhost:8080\";\r\n\r\nconst Login = () => {\r\n  const [state, setState] = useState({\r\n    id: \"\",\r\n    password: \"\",\r\n  });\r\n  const dispatch = useUserDispatch();\r\n  const handleChangeState = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onLoginHandler = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"/member/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        memberId: state.id,\r\n        memberPassword: state.password,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        if (result.message === \"success\") {\r\n          console.log(\"로그인에 성공하였습니다.\");\r\n          localStorage.setItem(\"memberId\", state.id);\r\n          //localstorage.setItem(\"token\", result.token)\r\n          // local 말고 db에도 데이터 surveyDone 필요\r\n          // 로그인 시 db에서 goal, fixed, 미션 등 가져오기\r\n          navigate(\"/\");\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            userId: state.id,\r\n          });\r\n        } else if (result.message === \"successFirst\") {\r\n          navigate(\"/survey\");\r\n        } else if (result.message === \"fail\") {\r\n          alert(\"아이디나 비밀번호를 확인해 주세요.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onJoinHandler = (e) => {\r\n    e.preventDefault();\r\n    navigate(\"/join\");\r\n  };\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"login_box\">\r\n        <div>\r\n          <input\r\n            name=\"id\"\r\n            type=\"id\"\r\n            value={state.id}\r\n            placeholder=\"아이디\"\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={state.password}\r\n            placeholder=\"비밀번호\"\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div className=\"button_box\">\r\n          <div>\r\n            <Button text={\"로그인하기\"} onClick={onLoginHandler} />\r\n          </div>\r\n          <div className=\"button_up_text\">아이디가 없다면?</div>\r\n          <div>\r\n            <Button text={\"회원가입하기\"} onClick={onJoinHandler} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Survey_goalmoney.js",["116"],[],"import Button from \"../components/Button\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Survey_goalmoney = () => {\r\n  const navigate = useNavigate();\r\n  const id = localStorage.getItem(\"memberId\");\r\n  const fixedList = JSON.parse(localStorage.getItem(\"fixed_entry\"));\r\n  const goalList = JSON.parse(localStorage.getItem(\"goal_entry\"));\r\n  const [goalmoneyList, setGoalmoneyList] = useState({\r\n    goalmoney1: \"\",\r\n    goalmoney2: \"\",\r\n    goalmoney3: \"\",\r\n  });\r\n  const handleChangeState = (e) => {\r\n    setGoalmoneyList({\r\n      ...goalmoneyList,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"/member/survey\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        //local에서 꺼내쓰기\r\n        surveyId: \"ididd\",\r\n        fixedEntry: fixedList.map((row) => row.name),\r\n        goalEntry1: goalList[0].name,\r\n        goalMoney1: Number(goalmoneyList.goalmoney1),\r\n        goalEntry2: goalList[1].name,\r\n        goalMoney2: Number(goalmoneyList.goalmoney2),\r\n        goalEntry3: goalList[2].name,\r\n        goalMoney3: Number(goalmoneyList.goalmoney3),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        alert(\"목표 설정이 완료되었습니다!\");\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"survey_qs\">\r\n        <div className=\"survey_q_box\">\r\n          <div className=\"survey_q_text\">\r\n            절약하고 싶은 항목별로 목표 금액을 설정해 주세요.<br></br> 목표\r\n            금액은 해당 항목 소비량의 5% 이상이어야 합니다.\r\n          </div>\r\n          <div className=\"goalmoney_list_box\">\r\n            {goalList.map((item, index) => (\r\n              <div\r\n                key={`goalmoney_${item.value}`}\r\n                className=\"goalmoney_box_element\"\r\n              >\r\n                {`${item.name} 항목의 절약 목표 금액을 설정해 주세요:`}\r\n                <input\r\n                  name={`goalmoney${index + 1}`}\r\n                  type=\"text\"\r\n                  onChange={handleChangeState}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <Button text={\"설정 완료\"} onClick={onSubmitHandler} type={\"survey\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Survey_goalmoney;\r\n","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Home.js",["117"],[],"import { useUserState } from \"../context/UserContext\";\r\n\r\nconst Home = () => {\r\n  const { user } = useUserState();\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\capstone\\demo\\src\\main\\frontend\\src\\pages\\Join.js",["118"],[],"import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUserDispatch } from \"../context/UserContext\";\r\nimport Button from \"../components/Button\";\r\n\r\nconst URL = \"http://localhost:8080\";\r\n\r\nconst Join = () => {\r\n  const [state, setState] = useState({\r\n    id: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n    name: \"\",\r\n    gender: \"female\",\r\n    age: \"\",\r\n    account: \"\",\r\n  });\r\n  const dispatch = useUserDispatch();\r\n\r\n  const handleChangeState = (e) => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !state.id ||\r\n      !state.password ||\r\n      !state.passwordCheck ||\r\n      !state.name ||\r\n      !state.age ||\r\n      !state.account\r\n    ) {\r\n      alert(\"모든 항목을 입력해 주세요.\");\r\n    } else {\r\n      dispatch({\r\n        type: \"LOGIN\",\r\n        userId: state.id,\r\n      });\r\n      fetch(\"/member/join\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          memberId: state.id,\r\n          memberPassword: state.password,\r\n          memberName: state.name,\r\n          memberAccount: state.account,\r\n          memberGender: state.gender,\r\n          memberAge: state.age,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          console.log(result);\r\n          navigate(\"/login\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const genderList = [\r\n    { value: \"female\", name: \"여자\" },\r\n    { value: \"male\", name: \"남자\" },\r\n  ];\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"Join\">\r\n      <div className=\"join_box\">\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">아이디</div>\r\n          <input\r\n            name=\"id\"\r\n            type=\"id\"\r\n            value={state.id}\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">비밀번호</div>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={state.password}\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">비밀번호 확인</div>\r\n          <div className=\"join_box_check\">\r\n            <input\r\n              name=\"passwordCheck\"\r\n              type=\"password\"\r\n              value={state.passwordCheck}\r\n              onChange={handleChangeState}\r\n            />\r\n            {/* {state.password !== \"\" &&\r\n              state.password !== state.passwordCheck && (\r\n                <div className=\"passwordCheck_wrong\">\r\n                  비밀번호가 일치하지 않습니다.\r\n                </div>\r\n              )} */}\r\n          </div>\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">이름</div>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={state.name}\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">성별</div>\r\n          <select\r\n            name=\"gender\"\r\n            onChange={handleChangeState}\r\n            value={state.gender}\r\n          >\r\n            {genderList.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">만 나이</div>\r\n          <input\r\n            name=\"age\"\r\n            type=\"text\"\r\n            value={state.age}\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <div className=\"join_box_text\">계좌번호</div>\r\n          <input\r\n            name=\"account\"\r\n            type=\"text\"\r\n            value={state.account}\r\n            onChange={handleChangeState}\r\n          />\r\n        </div>\r\n        <div className=\"join_box_element\">\r\n          <Button text={\"가입하기\"} onClick={onSubmitHandler} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","C:\\capstone\\demo\\src\\main\\frontend\\src\\context\\UserContext.js",[],[],"C:\\capstone\\demo\\src\\main\\frontend\\src\\components\\Button.js",[],[],{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":22,"column":54,"nodeType":"125","messageId":"126","endLine":22,"endColumn":74},{"ruleId":"119","severity":1,"message":"127","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":23},{"ruleId":"119","severity":1,"message":"128","line":6,"column":25,"nodeType":"121","messageId":"122","endLine":6,"endColumn":41},{"ruleId":"119","severity":1,"message":"129","line":4,"column":11,"nodeType":"121","messageId":"122","endLine":4,"endColumn":15},{"ruleId":"119","severity":1,"message":"130","line":6,"column":7,"nodeType":"121","messageId":"122","endLine":6,"endColumn":10},{"ruleId":"119","severity":1,"message":"129","line":18,"column":11,"nodeType":"121","messageId":"122","endLine":18,"endColumn":15},{"ruleId":"119","severity":1,"message":"131","line":23,"column":9,"nodeType":"121","messageId":"122","endLine":23,"endColumn":25},{"ruleId":"119","severity":1,"message":"132","line":24,"column":9,"nodeType":"121","messageId":"122","endLine":24,"endColumn":24},{"ruleId":"133","replacedBy":"134"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":22,"column":54,"nodeType":"125","messageId":"126","endLine":22,"endColumn":74},{"ruleId":"119","severity":1,"message":"129","line":18,"column":11,"nodeType":"121","messageId":"122","endLine":18,"endColumn":15},{"ruleId":"119","severity":1,"message":"131","line":23,"column":9,"nodeType":"121","messageId":"122","endLine":23,"endColumn":25},{"ruleId":"119","severity":1,"message":"132","line":24,"column":9,"nodeType":"121","messageId":"122","endLine":24,"endColumn":24},{"ruleId":"119","severity":1,"message":"130","line":6,"column":7,"nodeType":"121","messageId":"122","endLine":6,"endColumn":10},{"ruleId":"119","severity":1,"message":"135","line":7,"column":9,"nodeType":"121","messageId":"122","endLine":7,"endColumn":11},{"ruleId":"119","severity":1,"message":"129","line":4,"column":11,"nodeType":"121","messageId":"122","endLine":4,"endColumn":15},{"ruleId":"119","severity":1,"message":"130","line":6,"column":7,"nodeType":"121","messageId":"122","endLine":6,"endColumn":10},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Survey_goalmoney must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'goalMoneyList' is assigned a value but never used.","'setGoalMoneyList' is assigned a value but never used.","'user' is assigned a value but never used.","'URL' is assigned a value but never used.","'storageFixedList' is assigned a value but never used.","'storageGoalList' is assigned a value but never used.","no-new-object",["136"],"'id' is assigned a value but never used.","no-object-constructor"]